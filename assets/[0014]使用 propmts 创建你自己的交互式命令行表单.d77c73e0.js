export default"## 引言\n**REPL** 是 R(read)、E(evaluate)、P(print)、L(loop) 的缩写，称为**交互式命令行**，是程序用来读取用户的输入的方式。比如在 C 语言中调用`<stdio.h>` 中的 `scanf` 函数收集用户输入的数据。在执行 `npm init` 时，也会出现 REPL 收集创建 npm 包时所需的信息。\n再比如：我们在使用 `@vue-cli` 脚手架创建项目时，敲下`vue create my-app`命令后，会弹出配置选择交互菜单：\n\n```sh\n Vue CLI v4.5.8\n┌──────────────────────────────────────────┐\n│                                          │\n│   New version available 4.5.8 → 4.5.10   │\n│     Run npm i -g @vue/cli to update!     │\n│                                          │\n└──────────────────────────────────────────┘\n\n? Please pick a preset: (Use arrow keys)\n  Default ([Vue 2] babel, eslint)\n  Default (Vue 3 Preview) ([Vue 3] babel, eslint)\n  Manually select features \n```\n\n```sh\n? Please pick a preset: Manually select features\n? Check the features needed for your project: (Press <space> to select, <a> to toggle all, <i> to invert selection)\n (*) createChoice Vue version\n (*) Babel\n ( ) TypeScript\n ( ) Progressive Web App (PWA) Support\n>( ) Router\n ( ) Vuex\n ( ) CSS Pre-processors\n (*) Linter / Formatter\n ( ) Unit Testing\n ( ) E2E Testing \n ```\n\n这种便捷友好的 REPL 拓展工具，外形美观、功能强大，而实现起来也非常简单。下面就开始介绍一款 node 的 repl 工具：**prompts**\n\n## Prompts 介绍和使用\n\n> Lightweight, beautiful and user-friendly interactive prompts \n轻量、美观与易用的交互式命令提示工具\n\nnpm 安装，不必多言\n```sh\nnpm install prompts\n```\n\n我们来实现一个简易表单，获取某射击游戏，玩家输入的用户名、密码、年龄等基本信息：\n```javascript\nconst prompts = require('prompts');\n\n\n~async function () {\n\tconst createChoice = (title, disable) => ({ title, value: title, disable: !!disable });\n\n\tconst res = await prompts([\n\t\t{\n\t\t\ttype: 'text', // 文字类型\n\t\t\tname: 'user',\n\t\t\tmessage: 'input user'\n\t\t},\n\t\t{\n\t\t\ttype: 'password', // 密码类型\n\t\t\tname: 'password',\n\t\t\tmessage: 'input: password'\n\t\t},\n\t\t{\n\t\t\ttype: 'number', // 数字类型\n\t\t\tname: 'age',\n\t\t\tmessage: 'input age'\n\t\t},\n\t\t{\n\t\t\ttype: 'select', // 单选\n\t\t\tname: 'gender',\n\t\t\tmessage: 'your gender',\n\t\t\tchoices: [createChoice('male'), createChoice('female'), createChoice('others')]\n\t\t},\n\t\t{\n\t\t\ttype: 'multiselect', // 多选\n\t\t\tname: 'weapons',\n\t\t\tmessage: 'select your weapon',\n\t\t\tchoices: [\n\t\t\t\tcreateChoice('M16A4'),\n\t\t\t\tcreateChoice('AK-74'),\n\t\t\t\tcreateChoice('QBZ-95'),\n\t\t\t\tcreateChoice('MP5'),\n\t\t\t\tcreateChoice('P90'),\n\t\t\t\tcreateChoice('Kar-98K'),\n\t\t\t\tcreateChoice('Dragunov'),\n\t\t\t\tcreateChoice('DesertEagle'),\n\t\t\t\tcreateChoice('Glock-18'),\n\t\t\t]\n\t\t}\n\t]);\n\n\tconsole.log(JSON.stringify(res));\n}();\n```\n运行脚本，填单过程如下，与上文 vue 脚手架工具相差无几：\n```sh\n√ input user ... Soap\n√ input: password ... ***\n√ input age ... 33\n√ your gender » male\n? select your weapon »\nInstructions:\n    ↑/↓: Highlight option\n    ←/→/[space]: Toggle selection\n    a: Toggle all\n    enter/return: Complete answer\n(*)   M16A4\n( )   AK-74\n( )   QBZ-95\n( )   MP5\n( )   P90\n( )   Kar-98K\n( )   Dragunov\n(*)   DesertEagle\n(*)   Glock-18 \n```\n最后输出结果：\n```JSON\n{\"user\":\"Soap\",\"password\":\"141\",\"age\":33,\"gender\":\"male\",\"weapons\":[\"M16A4\",\"DesertEagle\",\"Glock-18\"]}\n```\n\n";
